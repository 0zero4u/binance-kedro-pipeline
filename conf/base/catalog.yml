# 01_raw
book_raw:
  type: kedro_datasets.pandas.CSVDataset
  filepath: "data/01_raw/book_ticker.csv"
  load_args:
    names: ["update_id", "best_bid_price", "best_bid_qty", "best_ask_price", "best_ask_qty", "transaction_time", "event_time"]
    skiprows: 1 
    dtype:
      # --- MEMORY OPTIMIZATIONS ---
      update_id: uint32          # Use smaller integer type for IDs
      best_bid_price: float64      # Keep price at high precision
      best_bid_qty: float32        # float32 is sufficient for quantities
      best_ask_price: float64      # Keep price at high precision
      best_ask_qty: float32        # float32 is sufficient for quantities
      transaction_time: int64      # Keep timestamps at high precision
      event_time: int64            # Keep timestamps at high precision

trade_raw:
  type: kedro_datasets.pandas.CSVDataset
  filepath: "data/01_raw/trades.csv"
  load_args:
    names: ["id", "price", "qty", "quote_qty", "time", "is_buyer_maker"]
    skiprows: 1
    dtype:
      # --- MEMORY OPTIMIZATIONS ---
      id: uint64                 # Trade IDs can be very large; uint64 is safe
      price: float64               # Keep price at high precision
      qty: float32                 # float32 is sufficient for quantities
      quote_qty: float32           # float32 is sufficient for quantities
      time: int64                  # Keep timestamps at high precision
      is_buyer_maker: bool

# 02_intermediate
merged_tick_data: {type: kedro_datasets.pandas.ParquetDataset, filepath: "data/02_intermediate/merged_tick_data.parquet"}
enriched_tick_data_unvalidated: {type: MemoryDataSet}
enriched_tick_data: {type: MemoryDataSet}
ewma_features_tbt: {type: MemoryDataSet}

# 03_primary
features_data_unvalidated: {type: MemoryDataSet}
features_data: {type: kedro_datasets.pandas.ParquetDataset, filepath: "data/03_primary/features_data.parquet"}

# 05_model_input (LGBM)
labeled_data:
  type: kedro_datasets.pandas.ParquetDataset
  filepath: "data/05_model_input/labeled_data.parquet"
  layer: model_input

# 06_models (LGBM)
lgbm_model:
  type: kedro_datasets.pickle.PickleDataset
  filepath: "data/06_models/lgbm_price_movement_model.pkl"
  layer: models

# 07_reporting (LGBM & New Traceability Report)
lgbm_eval_results:
  type: kedro_datasets.json.JSONDataset
  filepath: "data/07_reporting/lgbm_evaluation.json"

unified_5min_traceability_report:
  type: kedro_datasets.pandas.CSVDataset
  filepath: "data/07_reporting/unified_5min_traceability_report.csv"
  layer: reporting

# ----------------------------------------------------------------
# Datasets for the ARF Pipeline
# ----------------------------------------------------------------
features_data_arf: {type: kedro_datasets.pandas.ParquetDataset, filepath: data/03_primary/features_data_arf.parquet}
labeled_data_arf: {type: kedro_datasets.pandas.ParquetDataset, filepath: data/05_model_input/labeled_data_arf.parquet}
scaled_data_arf: {type: kedro_datasets.pandas.ParquetDataset, filepath: data/05_model_input/scaled_data_arf.parquet}
robust_scaler: {type: kedro_datasets.pickle.PickleDataset, filepath: data/06_models/robust_scaler.pkl}
arf_training_results: {type: kedro_datasets.pickle.PickleDataset, filepath: data/06_models/arf_training_results.pkl}
arf_model: {type: kedro_datasets.pickle.PickleDataset, filepath: data/06_models/arf_price_movement_model.pkl, layer: models}
