book_raw:
  type: kedro_datasets.pandas.CSVDataset
  filepath: "data/01_raw/book_ticker.csv"
  load_args:
    names: ["update_id", "best_bid_price", "best_bid_qty", "best_ask_price", "best_ask_qty", "transaction_time", "event_time"]
    skiprows: 1 
    dtype:
      update_id: uint32
      best_bid_price: float64
      best_bid_qty: float32
      best_ask_price: float64
      best_ask_qty: float32
      transaction_time: int64
      event_time: int64

trade_raw:
  type: kedro_datasets.pandas.CSVDataset
  filepath: "data/01_raw/trades.csv"
  load_args:
    names: ["id", "price", "qty", "quote_qty", "time", "is_buyer_maker"]
    skiprows: 1
    dtype:
      id: uint64
      price: float64
      qty: float32
      quote_qty: float32
      time: int64
      is_buyer_maker: bool

# 02_intermediate
merged_grid_15ms: {type: kedro_datasets.pandas.ParquetDataset, filepath: "data/02_intermediate/merged_grid_15ms.parquet"}
primary_features_grid: {type: kedro_datasets.pandas.ParquetDataset, filepath: "data/02_intermediate/primary_features_grid.parquet"}
ewma_features_grid: {type: kedro_datasets.pandas.ParquetDataset, filepath: "data/02_intermediate/ewma_features_grid.parquet"}
grid_with_bar_features: {type: kedro_datasets.pandas.ParquetDataset, filepath: "data/02_intermediate/grid_with_bar_features.parquet"}
grid_with_microstructure_features: {type: kedro_datasets.pandas.ParquetDataset, filepath: "data/02_intermediate/grid_with_microstructure_features.parquet"}


# 03_primary
features_data_unvalidated: {type: kedro_datasets.pandas.ParquetDataset, filepath: "data/03_primary/features_data_unvalidated.parquet"}
features_data: {type: kedro_datasets.pandas.ParquetDataset, filepath: "data/03_primary/features_data.parquet"}

# Datasets for holding split data
train_features:
  type: kedro_datasets.pandas.ParquetDataset
  filepath: "data/03_primary/train_features.parquet"
  layer: primary

test_features:
  type: kedro_datasets.pandas.ParquetDataset
  filepath: "data/03_primary/test_features.parquet"
  layer: primary


# 05_model_input
labeled_data:
  type: kedro_datasets.pandas.ParquetDataset
  filepath: "data/05_model_input/labeled_data.parquet"
  layer: model_input

test_labeled_data:
  type: kedro_datasets.pandas.ParquetDataset
  filepath: "data/05_model_input/test_labeled_data.parquet"
  layer: model_input


# 06_models
lgbm_model:
  type: kedro_datasets.pickle.PickleDataset
  filepath: "data/06_models/lgbm_price_movement_model.pkl"
  layer: models

# 07_reporting
lgbm_eval_results:
  type: kedro_datasets.json.JSONDataset
  filepath: "data/07_reporting/lgbm_evaluation.json"

lgbm_holdout_test_results:
  type: kedro_datasets.json.JSONDataset
  filepath: "data/07_reporting/lgbm_holdout_test_evaluation.json"

unified_5min_traceability_report:
  type: kedro_datasets.pandas.CSVDataset
  filepath: "data/07_reporting/unified_5min_traceability_report.csv"
  layer: reporting

# ----------------------------------------------------------------
# Datasets for the ARF Pipeline
# ----------------------------------------------------------------
features_data_arf: {type: kedro_datasets.pandas.ParquetDataset, filepath: data/03_primary/features_data_arf.parquet}
labeled_data_arf: {type: kedro_datasets.pandas.ParquetDataset, filepath: data/05_model_input/labeled_data_arf.parquet}
scaled_data_arf: {type: kedro_datasets.pandas.ParquetDataset, filepath: data/05_model_input/scaled_data_arf.parquet}
robust_scaler: {type: kedro_datasets.pickle.PickleDataset, filepath: data/06_models/robust_scaler.pkl}
arf_training_results: {type: kedro_datasets.pickle.PickleDataset, filepath: data/06_models/arf_training_results.pkl}
arf_model: {type: kedro_datasets.pickle.PickleDataset, filepath: data/06_models/arf_price_movement_model.pkl, layer: models}

# NEW: Final ARF holdout test evaluation results
arf_holdout_test_results:
  type: kedro_datasets.json.JSONDataset
  filepath: "data/07_reporting/arf_holdout_test_evaluation.json"
